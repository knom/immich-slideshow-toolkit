name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.2.3

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node/NPM
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Restore NPM dependencies
        run: npm install

      - name: Zip output
        run: |
          zip -r ./release_${{ github.ref_name }}.zip .

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          artifacts: release_${{ github.ref_name }}.zip
          body: |
            Automated release of version ${{ github.ref_name }}

      - name: Build image
        run: |
          IMAGE_NAME=${{ github.repository }}
          docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_NAME=${{ github.repository }}
          IMAGE_ID=ghcr.io/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          REF=${{ github.ref }}
          VERSION=$(echo "$REF" | sed -e 's,.*/,,') # extract last part

          IS_TAG=false
          if [[ "$REF" == refs/tags/* ]]; then
            IS_TAG=true
            VERSION=$(echo $VERSION | sed -e 's/^v//')  # strip 'v' prefix
          fi

          echo "IMAGE_ID=$IMAGE_ID"
          echo "VERSION=$VERSION"
          echo "IS_TAG=$IS_TAG"

          # Always tag and push the full version (either tag or branch name)
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          if [ "$IS_TAG" = true ]; then
            # Split version into components
            IFS='.' read -r MAJOR MINOR PATCH REST <<< "$VERSION"

            TAGS=("$MAJOR")
            if [[ -n "$MINOR" ]]; then
              TAGS+=("$MAJOR.$MINOR")
            fi
            if [[ -n "$PATCH" ]]; then
              TAGS+=("$MAJOR.$MINOR.$PATCH")
            fi

            for TAG in "${TAGS[@]}"; do
              echo "Tagging $IMAGE_ID:$TAG"
              docker tag $IMAGE_NAME $IMAGE_ID:$TAG
              docker push $IMAGE_ID:$TAG
            done

            # Also tag and push as latest
            echo "Tagging $IMAGE_ID:latest"
            docker tag $IMAGE_NAME $IMAGE_ID:latest
            docker push $IMAGE_ID:latest

          elif [ "$VERSION" = "main" ]; then
            # Tag and push as nightly if branch is main
            echo "Tagging $IMAGE_ID:nightly"
            docker tag $IMAGE_NAME $IMAGE_ID:nightly
            docker push $IMAGE_ID:nightly
          fi